IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Orders_UpdateOrderDetails]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Orders_UpdateOrderDetails]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Orders_UpdateOrderDetails]
		@OrderID int, 
		@CartID nvarchar(50)
	AS
	SET NOCOUNT ON
	
	-- Remove the current order details from the order
	DELETE FROM {databaseOwner}{objectQualifier}Store_OrderDetails
	WHERE OrderId = @OrderID

	-- Insert the new order details from the specified cart
	INSERT INTO {databaseOwner}{objectQualifier}Store_OrderDetails
		(OrderID, ProductID, Quantity, UnitCost, RoleID)
	SELECT @OrderID, ci.ProductID, ci.Quantity, CASE WHEN GETDATE() BETWEEN pr.SaleStartDate AND pr.SaleEndDate AND pr.SalePrice IS NOT NULL THEN pr.SalePrice ELSE pr.UnitCost END AS 'UnitCost', pr.RoleID
	FROM {databaseOwner}{objectQualifier}Store_CartItems ci, {databaseOwner}{objectQualifier}Store_Products pr
	WHERE ci.ProductID = pr.ProductID
	AND ci.CartID = @CartID

	-- Return the updated Order
	SELECT  
		o.OrderID,
		o.UserID as CustomerID,
		Cast(sum(od.Quantity*od.UnitCost) as money) as OrderTotal,
		o.OrderNumber,
		o.OrderDate, 
		o.ShipDate,
		o.ShippingAddressID,
		o.BillingAddressID,
		o.Tax,
		o.ShippingCost,
		o.OrderStatusID,
		o.CouponID,
		o.Discount
	FROM {databaseOwner}{objectQualifier}Store_Orders o, {databaseOwner}{objectQualifier}Store_OrderDetails od 
	WHERE o.OrderID = od.OrderID
	AND o.OrderID = @OrderID
	GROUP BY    
		o.UserID, 
		o.OrderID,
		o.OrderNumber, 
		o.OrderDate, 
		o.ShipDate,
		o.ShippingAddressID,
		o.BillingAddressID,
		o.Tax,
		o.ShippingCost,
		o.OrderStatusID,
		o.CouponID,
		o.Discount
	HAVING o.OrderID = @OrderID
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Orders_CountCouponUsage]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Orders_CountCouponUsage]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Orders_CountCouponUsage]
    @PortalID int,
    @UserID int,
    @CouponID int,
    @OrderID int
AS
	SET NOCOUNT ON

	SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}Store_Orders o
	WHERE o.PortalID = @PortalID AND o.UserID = @UserID AND o.CouponID = @CouponID AND o.OrderID <> @OrderID AND o.OrderIsPlaced = 1
GO
