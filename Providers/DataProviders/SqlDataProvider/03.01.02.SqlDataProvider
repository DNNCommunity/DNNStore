IF NOT EXISTS (SELECT sc.[object_id] FROM sys.objects so INNER JOIN sys.columns sc ON so.[object_id]=sc.[object_id] WHERE so.[name]=N'{objectQualifier}Store_Products' AND sc.[name]=N'RegularPrice')
ALTER TABLE {databaseOwner}{objectQualifier}Store_Products ADD RegularPrice money DEFAULT(0) NOT NULL;
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_AddProduct]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_AddProduct]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_AddProduct]
		@PortalID int,
		@CategoryID int,
		@Manufacturer nvarchar(50),
		@ModelNumber nvarchar(50),
		@ModelName nvarchar(50),
		@SEOName nvarchar(50),
		@ProductImage nvarchar(500),
		@RegularPrice money,
		@UnitCost money,
		@Keywords nvarchar(1000),
		@Summary nvarchar(1000),
		@Description ntext,
		@Featured bit,
		@Archived bit,
		@CreatedByUser nvarchar(100),
		@CreatedDate datetime,
		@Weight decimal(10,2),
		@Height decimal(10,2),
		@Length decimal(10,2),
		@Width decimal(10,2),
		@SaleStartDate datetime = null,
		@SaleEndDate datetime = null,
		@SalePrice money = null,
		@StockQuantity int,
		@LowThreshold int,
		@HighThreshold int,
		@DeliveryTime int,
		@PurchasePrice money,
		@RoleID int,
		@Virtual bit,
		@VirtualFileID int,
		@AllowedDownloads int
	AS
	SET NOCOUNT ON

	INSERT INTO {databaseOwner}{objectQualifier}Store_Products
		(PortalID, CategoryID, Manufacturer, ModelNumber, ModelName, SEOName, ProductImage, RegularPrice, UnitCost, Keywords, Summary, [Description],Featured, Archived, CreatedByUser, CreatedDate, ProductWeight, ProductHeight, ProductLength, ProductWidth, SaleStartDate, SaleEndDate, SalePrice, StockQuantity, LowThreshold, HighThreshold, DeliveryTime, PurchasePrice, RoleID, Virtual, VirtualFileID, AllowedDownloads)
		VALUES
		(@PortalID, @CategoryID, @Manufacturer, @ModelNumber, @ModelName, @SEOName, @ProductImage, @RegularPrice, @UnitCost, @Keywords, @Summary, @Description, @Featured, @Archived, @CreatedByUser, @CreatedDate, @Weight, @Height, @Length, @Width, @SaleStartDate, @SaleEndDate, @SalePrice, @StockQuantity, @LowThreshold, @HighThreshold, @DeliveryTime, @PurchasePrice, @RoleID, @Virtual, @VirtualFileID, @AllowedDownloads)
	SELECT SCOPE_IDENTITY()
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetAlsoBoughtProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetAlsoBoughtProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetAlsoBoughtProducts]
		@PortalID int,
		@ProductID int,
		@Archived bit = 0
	AS
	SET NOCOUNT ON
 
	DECLARE @ABProducts table(ProductID int, Frequency int)

	INSERT INTO @ABProducts
	SELECT p.ProductID, COUNT(*) AS Frequency
	FROM {databaseOwner}{objectQualifier}Store_OrderDetails od
	INNER JOIN {databaseOwner}{objectQualifier}Store_OrderDetails od2 ON od.OrderID = od2.OrderID AND od.OrderID = od2.OrderID
	INNER JOIN {databaseOwner}{objectQualifier}Store_Products p ON od2.ProductID = p.ProductID
	WHERE (od.ProductID = @ProductID) AND (od2.ProductID <> @ProductID) AND (p.PortalID = @PortalID)
	GROUP BY p.ProductID
 
	IF @Archived = 1
		BEGIN
			SELECT
				p.ProductID,
				PortalID,
				CategoryID,
				Manufacturer,
				ModelNumber,
				ModelName,
				SEOName,
				ProductImage,
				RegularPrice,
				UnitCost,
				Summary,
				[Description],
				Featured,
				Archived,
				CreatedByUser,
				CreatedDate,
				ProductWeight,
				SaleStartDate,
				SaleEndDate,
				SalePrice,
				ProductHeight,
				ProductLength,
				ProductWidth,
				Keywords,
				StockQuantity,
				LowThreshold,
				HighThreshold,
				DeliveryTime,
				PurchasePrice,
				RoleID,
				Virtual,
				VirtualFileID,
				AllowedDownloads
			FROM {databaseOwner}{objectQualifier}Store_Products p
			INNER JOIN @ABProducts abp ON p.ProductID = abp.ProductID
			WHERE p.IsDeleted = 0
			ORDER BY abp.Frequency DESC
		END
	ELSE
		BEGIN
			SELECT
				p.ProductID,
				PortalID,
				CategoryID,
				Manufacturer,
				ModelNumber,
				ModelName,
				SEOName,
				ProductImage,
				RegularPrice,
				UnitCost,
				Summary,
				[Description],
				Featured,
				Archived,
				CreatedByUser,
				CreatedDate,
				ProductWeight,
				SaleStartDate,
				SaleEndDate,
				SalePrice,
				ProductHeight,
				ProductLength,
				ProductWidth,
				Keywords,
				StockQuantity,
				LowThreshold,
				HighThreshold,
				DeliveryTime,
				PurchasePrice,
				RoleID,
				Virtual,
				VirtualFileID,
				AllowedDownloads
			FROM {databaseOwner}{objectQualifier}Store_Products p
			INNER JOIN @ABProducts abp ON p.ProductID = abp.ProductID
			WHERE p.Archived = 0 AND p.IsDeleted = 0
			ORDER BY abp.Frequency DESC
		END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetFeaturedProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetFeaturedProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetFeaturedProducts]
		@PortalID int,
		@CategoryID int,
		@Archived bit = 0
	AS
	SET NOCOUNT ON
	
	IF @Archived = 1
		BEGIN
			SELECT
				ProductID,
				PortalID,
				CategoryID,
				Manufacturer,
				ModelNumber,
				ModelName,
				SEOName,
				ProductImage,
				RegularPrice,
				UnitCost,
				Keywords,
				Summary,
				[Description],
				Featured,
				Archived,
				CreatedByUser,
				CreatedDate,
				ProductWeight,
				ProductHeight,
				ProductLength,
				ProductWidth,
				SaleStartDate,
				SaleEndDate,
				SalePrice,
				StockQuantity,
				LowThreshold,
				HighThreshold,
				DeliveryTime,
				PurchasePrice,
				RoleID,
				Virtual,
				VirtualFileID,
				AllowedDownloads
			FROM 	{databaseOwner}{objectQualifier}Store_Products 
			WHERE PortalID = @PortalID AND CategoryID  = @CategoryID
			AND IsDeleted = 0
			AND	Featured = 1
			ORDER BY NEWID()
		END
	ELSE
		BEGIN
			
			SELECT
				ProductID,
				PortalID,
				CategoryID,
				Manufacturer,
				ModelNumber,
				ModelName,
				SEOName,
				ProductImage,
				RegularPrice,
				UnitCost,
				Keywords,
				Summary,
				[Description],
				Featured,
				Archived,
				CreatedByUser,
				CreatedDate,
				ProductWeight,
				ProductHeight,
				ProductLength,
				ProductWidth,
				SaleStartDate,
				SaleEndDate,
				SalePrice,
				StockQuantity,
				LowThreshold,
				HighThreshold,
				DeliveryTime,
				PurchasePrice,
				RoleID,
				Virtual,
				VirtualFileID,
				AllowedDownloads
			FROM 	{databaseOwner}{objectQualifier}Store_Products 
			WHERE PortalID = @PortalID AND CategoryID  = @CategoryID
			AND	Featured = 1
			AND 	Archived = 0
			AND IsDeleted = 0
			ORDER BY NEWID()
		END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetNewProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetNewProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetNewProducts]
		@PortalID int,
		@CategoryID int,
		@Archived bit = 0
	AS
	SET NOCOUNT ON
	
	IF @Archived = 1
		BEGIN
			SELECT
				ProductID,
				PortalID,
				CategoryID,
				Manufacturer,
				ModelNumber,
				ModelName,
				SEOName,
				ProductImage,
				RegularPrice,
				UnitCost,
				Keywords,
				Summary,
				[Description],
				Featured,
				Archived,
				CreatedByUser,
				CreatedDate,
				ProductWeight,
				ProductHeight,
				ProductLength,
				ProductWidth,
				SaleStartDate,
				SaleEndDate,
				SalePrice,
				StockQuantity,
				LowThreshold,
				HighThreshold,
				DeliveryTime,
				PurchasePrice,
				RoleID,
				Virtual,
				VirtualFileID,
				AllowedDownloads
			FROM 	{databaseOwner}{objectQualifier}Store_Products 
			WHERE PortalID = @PortalID AND CategoryID  = @CategoryID
			AND IsDeleted = 0
			ORDER BY CreatedDate DESC
		END
	ELSE
		BEGIN
			SELECT
				ProductID,
				PortalID,
				CategoryID,
				Manufacturer,
				ModelNumber,
				ModelName,
				SEOName,
				ProductImage,
				RegularPrice,
				UnitCost,
				Keywords,
				Summary,
				[Description],
				Featured,
				Archived,
				CreatedByUser,
				CreatedDate,
				ProductWeight,
				ProductHeight,
				ProductLength,
				ProductWidth,
				SaleStartDate,
				SaleEndDate,
				SalePrice,
				StockQuantity,
				LowThreshold,
				HighThreshold,
				DeliveryTime,
				PurchasePrice,
				RoleID,
				Virtual,
				VirtualFileID,
				AllowedDownloads
			FROM 	{databaseOwner}{objectQualifier}Store_Products 
			WHERE PortalID = @PortalID AND CategoryID  = @CategoryID
			AND 	Archived = 0
			AND IsDeleted = 0
			ORDER BY CreatedDate DESC
		END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetPopularProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPopularProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPopularProducts]
		@PortalID int,
		@CategoryID int,
		@Archived bit = 0
	AS
	SET NOCOUNT ON
 
	DECLARE @Orders table(OrderID int)
	DECLARE @Products table(ProductID int, Quantity int)

	INSERT INTO @Orders
	SELECT OrderID
	FROM {databaseOwner}{objectQualifier}Store_Orders
	WHERE PortalID = @PortalID
 
	INSERT INTO @Products
	SELECT ProductID, SUM(Quantity)
	FROM {databaseOwner}{objectQualifier}Store_OrderDetails p, @Orders o
	WHERE p.OrderID = o.OrderID
	GROUP BY ProductID
 
	IF @Archived = 1
		BEGIN
			SELECT
				p.ProductID,
				PortalID,
				CategoryID,
				Manufacturer,
				ModelNumber,
				ModelName,
				SEOName,
				ProductImage,
				p.RegularPrice,
				p.UnitCost,
				Keywords,
				Summary,
				[Description],
				Featured,
				Archived,
				CreatedByUser,
				CreatedDate,
				op.Quantity,
				ProductWeight,
				ProductHeight,
				ProductLength,
				ProductWidth,
				SaleStartDate,
				SaleEndDate,
				SalePrice,
				StockQuantity,
				LowThreshold,
				HighThreshold,
				DeliveryTime,
				PurchasePrice,
				RoleID,
				Virtual,
				VirtualFileID,
				AllowedDownloads
			FROM {databaseOwner}{objectQualifier}Store_Products p, @Products op
			WHERE p.PortalID = @PortalID AND p.ProductID = op.ProductID
				AND p.CategoryID = @CategoryID
				AND IsDeleted = 0
			ORDER BY op.Quantity DESC
		END
	ELSE
		BEGIN
			SELECT
				p.ProductID,
				PortalID,
				CategoryID,
				Manufacturer,
				ModelNumber,
				ModelName,
				SEOName,
				ProductImage,
				p.RegularPrice,
				p.UnitCost,
				Keywords,
				Summary,
				[Description],
				Featured,
				Archived,
				CreatedByUser,
				CreatedDate,
				op.Quantity,
				ProductWeight,
				ProductHeight,
				ProductLength,
				ProductWidth,
				SaleStartDate,
				SaleEndDate,
				SalePrice,
				StockQuantity,
				LowThreshold,
				HighThreshold,
				DeliveryTime,
				PurchasePrice,
				RoleID,
				Virtual,
				VirtualFileID,
				AllowedDownloads
			FROM {databaseOwner}{objectQualifier}Store_Products p, @Products op
			WHERE p.PortalID = @PortalID AND p.ProductID = op.ProductID
			AND p.CategoryID  = @CategoryID
			AND Archived = 0
			AND IsDeleted = 0
			ORDER BY op.Quantity DESC
		END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetPortalAllProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalAllProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalAllProducts]
		@PortalID int
	AS
	
	SET NOCOUNT ON

	SELECT
		ProductID,
		PortalID,
		CategoryID,
		Manufacturer,
		ModelNumber,
		ModelName,
		SEOName,
		ProductImage,
		RegularPrice,
		UnitCost,
		Keywords,
		Summary,
		[Description],
		Featured,
		Archived,
		CreatedByUser,
		CreatedDate,
		ProductWeight,
		ProductHeight,
		ProductLength,
		ProductWidth,
		SaleStartDate,
		SaleEndDate,
		SalePrice,
		StockQuantity,
		LowThreshold,
		HighThreshold,
		DeliveryTime,
		PurchasePrice,
		RoleID,
		Virtual,
		VirtualFileID,
		AllowedDownloads
	FROM {databaseOwner}{objectQualifier}Store_Products 
	WHERE PortalID = @PortalID
	AND IsDeleted = 0
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetPortalFeaturedProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalFeaturedProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalFeaturedProducts]
		@PortalID int,
		@Archived bit = 0
	AS
	SET NOCOUNT ON
	
	IF @Archived = 1
		SELECT
			ProductID,
			PortalID,
			CategoryID,
			Manufacturer,
			ModelNumber,
			ModelName,
			SEOName,
			ProductImage,
			RegularPrice,
			UnitCost,
			Keywords,
			Summary,
			[Description],
			Featured,
			Archived,
			CreatedByUser,
			CreatedDate,
			ProductWeight,
			ProductHeight,
			ProductLength,
			ProductWidth,
			SaleStartDate,
			SaleEndDate,
			SalePrice,
			StockQuantity,
			LowThreshold,
			HighThreshold,
			DeliveryTime,
			PurchasePrice,
			RoleID,
			Virtual,
			VirtualFileID,
			AllowedDownloads
		FROM 	{databaseOwner}{objectQualifier}Store_Products 
		WHERE 	PortalID = @PortalID
		AND	Featured = 1
		AND IsDeleted = 0
		ORDER BY NEWID()
	ELSE
		SELECT
			ProductID,
			PortalID,
			CategoryID,
			Manufacturer,
			ModelNumber,
			ModelName,
			SEOName,
			ProductImage,
			RegularPrice,
			UnitCost,
			Keywords,
			Summary,
			[Description],
			Featured,
			Archived,
			CreatedByUser,
			CreatedDate,
			ProductWeight,
			ProductHeight,
			ProductLength,
			ProductWidth,
			SaleStartDate,
			SaleEndDate,
			SalePrice,
			StockQuantity,
			LowThreshold,
			HighThreshold,
			DeliveryTime,
			PurchasePrice,
			RoleID,
			Virtual,
			VirtualFileID,
			AllowedDownloads
		FROM 	{databaseOwner}{objectQualifier}Store_Products 
		WHERE 	PortalID = @PortalID
		AND	Featured = 1
		AND 	Archived = 0
		AND IsDeleted = 0
		ORDER BY NEWID()
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetPortalLowStockProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalLowStockProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalLowStockProducts]
		@PortalID int
	AS
	
	SET NOCOUNT ON

	SELECT
		ProductID,
		PortalID,
		CategoryID,
		Manufacturer,
		ModelNumber,
		ModelName,
		SEOName,
		ProductImage,
		RegularPrice,
		UnitCost,
		Keywords,
		Summary,
		[Description],
		Featured,
		Archived,
		CreatedByUser,
		CreatedDate,
		ProductWeight,
		ProductHeight,
		ProductLength,
		ProductWidth,
		SaleStartDate,
		SaleEndDate,
		SalePrice,
		StockQuantity,
		LowThreshold,
		HighThreshold,
		DeliveryTime,
		PurchasePrice,
		RoleID,
		Virtual,
		VirtualFileID,
		AllowedDownloads
	FROM {databaseOwner}{objectQualifier}Store_Products 
	WHERE PortalID = @PortalID
	AND IsDeleted = 0
	AND StockQuantity <= LowThreshold
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetPortalNewProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalNewProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalNewProducts]
		@PortalID int,
		@Archived bit = 0
	AS
	SET NOCOUNT ON
	
	IF @Archived = 1
		SELECT
			ProductID,
			PortalID,
			CategoryID,
			Manufacturer,
			ModelNumber,
			ModelName,
			SEOName,
			ProductImage,
			RegularPrice,
			UnitCost,
			Keywords,
			Summary,
			[Description],
			Featured,
			Archived,
			CreatedByUser,
			CreatedDate,
			ProductWeight,
			ProductHeight,
			ProductLength,
			ProductWidth,
			SaleStartDate,
			SaleEndDate,
			SalePrice,
			StockQuantity,
			LowThreshold,
			HighThreshold,
			DeliveryTime,
			PurchasePrice,
			RoleID,
			Virtual,
			VirtualFileID,
			AllowedDownloads
		FROM 	{databaseOwner}{objectQualifier}Store_Products 
		WHERE 	PortalID = @PortalID
		AND IsDeleted = 0
		ORDER BY CreatedDate DESC
	ELSE
		SELECT
			ProductID,
			PortalID,
			CategoryID,
			Manufacturer,
			ModelNumber,
			ModelName,
			SEOName,
			ProductImage,
			RegularPrice,
			UnitCost,
			Keywords,
			Summary,
			[Description],
			Featured,
			Archived,
			CreatedByUser,
			CreatedDate,
			ProductWeight,
			ProductHeight,
			ProductLength,
			ProductWidth,
			SaleStartDate,
			SaleEndDate,
			SalePrice,
			StockQuantity,
			LowThreshold,
			HighThreshold,
			DeliveryTime,
			PurchasePrice,
			RoleID,
			Virtual,
			VirtualFileID,
			AllowedDownloads
		FROM 	{databaseOwner}{objectQualifier}Store_Products 
		WHERE 	PortalID = @PortalID
		AND 	Archived = 0
		AND IsDeleted = 0
		ORDER BY CreatedDate DESC
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetPortalOutOfStockProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalOutOfStockProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalOutOfStockProducts]
		@PortalID int
	AS
	
	SET NOCOUNT ON

	SELECT
		ProductID,
		PortalID,
		CategoryID,
		Manufacturer,
		ModelNumber,
		ModelName,
		SEOName,
		ProductImage,
		RegularPrice,
		UnitCost,
		Keywords,
		Summary,
		[Description],
		Featured,
		Archived,
		CreatedByUser,
		CreatedDate,
		ProductWeight,
		ProductHeight,
		ProductLength,
		ProductWidth,
		SaleStartDate,
		SaleEndDate,
		SalePrice,
		StockQuantity,
		LowThreshold,
		HighThreshold,
		DeliveryTime,
		PurchasePrice,
		RoleID,
		Virtual,
		VirtualFileID,
		AllowedDownloads
	FROM {databaseOwner}{objectQualifier}Store_Products 
	WHERE PortalID = @PortalID
	AND IsDeleted = 0
	AND StockQuantity < 1
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetPortalPopularProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalPopularProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalPopularProducts]
		@PortalID int,
		@Archived bit = 0
	AS
	SET NOCOUNT ON
 
	DECLARE @Orders table(OrderID int)
	DECLARE @Products table(ProductID int, Quantity int)
 
	INSERT INTO @Orders
	SELECT OrderID
	FROM {databaseOwner}{objectQualifier}Store_Orders
	WHERE PortalID = @PortalID
 
	INSERT INTO @Products
	SELECT ProductID, SUM(Quantity)
	FROM {databaseOwner}{objectQualifier}Store_OrderDetails p, @Orders o
	WHERE p.OrderID = o.OrderID
	GROUP BY ProductID
 
	IF @Archived = 1
		SELECT
			p.ProductID,
			PortalID,
			CategoryID,
			Manufacturer,
			ModelNumber,
			ModelName,
			SEOName,
			ProductImage,
			p.RegularPrice,
			p.UnitCost,
			Keywords,
			Summary,
			[Description],
			Featured,
			Archived,
			CreatedByUser,
			CreatedDate,
			op.Quantity,
			ProductWeight,
			ProductHeight,
			ProductLength,
			ProductWidth,
			SaleStartDate,
			SaleEndDate,
			SalePrice,
			StockQuantity,
			LowThreshold,
			HighThreshold,
			DeliveryTime,
			PurchasePrice,
			RoleID,
			Virtual,
			VirtualFileID,
			AllowedDownloads
		FROM {databaseOwner}{objectQualifier}Store_Products p, @Products op
		WHERE p.PortalID = @PortalID AND p.ProductID = op.ProductID
		AND IsDeleted = 0
		ORDER BY op.Quantity DESC
	ELSE
		SELECT
			p.ProductID,
			PortalID,
			CategoryID,
			Manufacturer,
			ModelNumber,
			ModelName,
			SEOName,
			ProductImage,
			p.RegularPrice,
			p.UnitCost,
			Keywords,
			Summary,
			[Description],
			Featured,
			Archived,
			CreatedByUser,
			CreatedDate,
			op.Quantity,
			ProductWeight,
			ProductHeight,
			ProductLength,
			ProductWidth,
			SaleStartDate,
			SaleEndDate,
			SalePrice,
			StockQuantity,
			LowThreshold,
			HighThreshold,
			DeliveryTime,
			PurchasePrice,
			RoleID,
			Virtual,
			VirtualFileID,
			AllowedDownloads
		FROM {databaseOwner}{objectQualifier}Store_Products p, @Products op
		WHERE p.PortalID = @PortalID AND p.ProductID = op.ProductID
		AND Archived = 0
		AND IsDeleted = 0
		ORDER BY op.Quantity DESC
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetPortalProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetPortalProducts]
		@PortalID int,
		@Featured bit = 0,
		@Archived bit = 0
	AS
	SET NOCOUNT ON

	SELECT
		ProductID,
		PortalID,
		CategoryID,
		Manufacturer,
		ModelNumber,
		ModelName,
		SEOName,
		ProductImage,
		RegularPrice,
		UnitCost,
		Keywords,
		Summary,
		[Description],
		Featured,
		Archived,
		CreatedByUser,
		CreatedDate,
		ProductWeight,
		ProductHeight,
		ProductLength,
		ProductWidth,
		SaleStartDate,
		SaleEndDate,
		SalePrice,
		StockQuantity,
		LowThreshold,
		HighThreshold,
		DeliveryTime,
		PurchasePrice,
		RoleID,
		Virtual,
		VirtualFileID,
		AllowedDownloads
	FROM {databaseOwner}{objectQualifier}Store_Products 
	WHERE PortalID = @PortalID
	AND Featured = @Featured
	AND Archived = @Archived
	AND IsDeleted = 0
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetProduct]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetProduct]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetProduct]
		@PortalID int,
		@ProductID int
	AS
	SET NOCOUNT ON

	SELECT
		ProductID,
		PortalID,
		CategoryID,
		Manufacturer,
		ModelNumber,
		ModelName,
		SEOName,
		ProductImage,
		RegularPrice,
		UnitCost,
		Keywords,
		Summary,
		[Description],
		Featured,
		Archived,
		CreatedByUser,
		CreatedDate,
		ProductWeight,
		ProductHeight,
		ProductLength,
		ProductWidth,
		SaleStartDate,
		SaleEndDate,
		SalePrice,
		StockQuantity,
		LowThreshold,
		HighThreshold,
		DeliveryTime,
		PurchasePrice,
		RoleID,
		Virtual,
		VirtualFileID,
		AllowedDownloads
	FROM {databaseOwner}{objectQualifier}Store_Products 
	WHERE PortalID = @PortalID AND ProductID = @ProductID AND IsDeleted = 0
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetProducts]
		@PortalID int,
		@CategoryID int,
		@Archived bit = 0,
		@SortOrder int,
		@SortDir varchar(4)
	AS
	SET NOCOUNT ON
	
	IF @Archived = 1
		BEGIN
			SELECT
				ProductID,
				PortalID,
				CategoryID,
				Manufacturer,
				ModelNumber,
				ModelName,
				SEOName,
				ProductImage,
				RegularPrice,
				UnitCost,
				Keywords,
				Summary,
				[Description],
				Featured,
				Archived,
				CreatedByUser,
				CreatedDate,
				ProductWeight,
				ProductHeight,
				ProductLength,
				ProductWidth,
				SaleStartDate,
				SaleEndDate,
				SalePrice,
				StockQuantity,
				LowThreshold,
				HighThreshold,
				DeliveryTime,
				PurchasePrice,
				RoleID,
				Virtual,
				VirtualFileID,
				AllowedDownloads
			FROM 	{databaseOwner}{objectQualifier}Store_Products 
			WHERE PortalID = @PortalID AND CategoryID  = @CategoryID
			AND IsDeleted = 0
			Order By
				Case @SortDir When 'ASC' Then
					Case 	When @SortOrder = 0 Then  Manufacturer
						When @SortOrder = 1 Then  ModelNumber
						When @SortOrder = 2 Then  ModelName
					End
				End,
				Case @SortDir When 'ASC' Then
					Case 	When @SortOrder = 3 Then UnitCost End
				End,
				Case @SortDir When 'ASC' Then
					Case 	When @SortOrder = 4 Then CreatedDate End
				End,
				Case @SortDir When 'DESC' Then
					Case 	When @SortOrder = 0 Then  Manufacturer
						When @SortOrder = 1 Then  ModelNumber
						When @SortOrder = 2 Then  ModelName
					End
				End DESC,
				Case @SortDir When 'DESC' Then
					Case 	When @SortOrder = 3 Then UnitCost End
				End DESC,
				Case @SortDir When 'DESC' Then
					Case 	When @SortOrder = 4 Then CreatedDate End
				End DESC
		END
	ELSE
		BEGIN
			IF @CategoryID = -1
				BEGIN
					SELECT
						ProductID,
						PortalID,
						CategoryID,
						Manufacturer,
						ModelNumber,
						ModelName,
						SEOName,
						ProductImage,
						RegularPrice,
						UnitCost,
						Keywords,
						Summary,
						[Description],
						Featured,
						Archived,
						CreatedByUser,
						CreatedDate,
						ProductWeight,
						ProductHeight,
						ProductLength,
						ProductWidth,
						SaleStartDate,
						SaleEndDate,
						SalePrice,
						StockQuantity,
						LowThreshold,
						HighThreshold,
						DeliveryTime,
						PurchasePrice,
						RoleID,
						Virtual,
						VirtualFileID,
						AllowedDownloads
					FROM 	{databaseOwner}{objectQualifier}Store_Products 
					WHERE PortalID = @PortalID AND Archived = 0	AND IsDeleted = 0
					Order By
						Case @SortDir When 'ASC' Then
							Case 	When @SortOrder = 0 Then  Manufacturer
								When @SortOrder = 1 Then  ModelNumber
								When @SortOrder = 2 Then  ModelName
							End
						End,
						Case @SortDir When 'ASC' Then
							Case 	When @SortOrder = 3 Then UnitCost End
						End,
						Case @SortDir When 'ASC' Then
							Case 	When @SortOrder = 4 Then CreatedDate End
						End,
						Case @SortDir When 'DESC' Then
							Case 	When @SortOrder = 0 Then  Manufacturer
								When @SortOrder = 1 Then  ModelNumber
								When @SortOrder = 2 Then  ModelName
							End
						End DESC,
						Case @SortDir When 'DESC' Then
							Case 	When @SortOrder = 3 Then UnitCost End
						End DESC,
						Case @SortDir When 'DESC' Then
							Case 	When @SortOrder = 4 Then CreatedDate End
						End DESC
				END
			ELSE
				BEGIN
					SELECT
						ProductID,
						PortalID,
						CategoryID,
						Manufacturer,
						ModelNumber,
						ModelName,
						SEOName,
						ProductImage,
						RegularPrice,
						UnitCost,
						Keywords,
						Summary,
						[Description],
						Featured,
						Archived,
						CreatedByUser,
						CreatedDate,
						ProductWeight,
						ProductHeight,
						ProductLength,
						ProductWidth,
						SaleStartDate,
						SaleEndDate,
						SalePrice,
						StockQuantity,
						LowThreshold,
						HighThreshold,
						DeliveryTime,
						PurchasePrice,
						RoleID,
						Virtual,
						VirtualFileID,
						AllowedDownloads
					FROM 	{databaseOwner}{objectQualifier}Store_Products 
					WHERE PortalID = @PortalID AND CategoryID  = @CategoryID
					AND Archived = 0	
					AND IsDeleted = 0
					Order By
						Case @SortDir When 'ASC' Then
							Case 	When @SortOrder = 0 Then  Manufacturer
								When @SortOrder = 1 Then  ModelNumber
								When @SortOrder = 2 Then  ModelName
							End
						End,
						Case @SortDir When 'ASC' Then
							Case 	When @SortOrder = 3 Then UnitCost End
						End,
						Case @SortDir When 'ASC' Then
							Case 	When @SortOrder = 4 Then CreatedDate End
						End,
						Case @SortDir When 'DESC' Then
							Case 	When @SortOrder = 0 Then  Manufacturer
								When @SortOrder = 1 Then  ModelNumber
								When @SortOrder = 2 Then  ModelName
							End
						End DESC,
						Case @SortDir When 'DESC' Then
							Case 	When @SortOrder = 3 Then UnitCost End
						End DESC,
						Case @SortDir When 'DESC' Then
							Case 	When @SortOrder = 4 Then CreatedDate End
						End DESC
				END
		END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_GetSearchedProducts]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetSearchedProducts]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_GetSearchedProducts]
		@PortalID int,
		@SearchColumn int,
		@SearchValue nvarchar(255),
		@SortOrder int,
		@SortDir varchar(4)
	AS
		SET NOCOUNT ON

		SELECT
			ProductID,
			PortalID,
			CategoryID,
			Manufacturer,
			ModelNumber,
			ModelName,
			SEOName,
			ProductImage,
			RegularPrice,
			UnitCost,
			Keywords,
			Summary,
			[Description],
			Featured,
			Archived,
			CreatedByUser,
			CreatedDate,
			ProductWeight,
			ProductHeight,
			ProductLength,
			ProductWidth,
			SaleStartDate,
			SaleEndDate,
			SalePrice,
			StockQuantity,
			LowThreshold,
			HighThreshold,
			DeliveryTime,
			PurchasePrice,
			RoleID,
			Virtual,
			VirtualFileID,
			AllowedDownloads
		FROM 	{databaseOwner}{objectQualifier}Store_Products 
		WHERE 	PortalID  = @PortalID
		AND Archived = 0	
		AND IsDeleted = 0
		AND
			Case
				When @SearchColumn = 0 Then Manufacturer
				When @SearchColumn = 1 Then ModelNumber
				When @SearchColumn = 2 Then ModelName
				When @SearchColumn = 3 Then Summary
				When @SearchColumn = 4 Then [Description]
			End
			LIKE @SearchValue
		ORDER BY
			Case @SortDir When 'ASC' Then
				Case 	When @SortOrder = 0 Then  Manufacturer
					When @SortOrder = 1 Then  ModelNumber
					When @SortOrder = 2 Then  ModelName
				End
			End,
			Case @SortDir When 'ASC' Then
				Case 	When @SortOrder = 3 Then UnitCost End
			End,
			Case @SortDir When 'ASC' Then
				Case 	When @SortOrder = 4 Then CreatedDate End
			End,
			Case @SortDir When 'DESC' Then
				Case 	When @SortOrder = 0 Then  Manufacturer
					When @SortOrder = 1 Then  ModelNumber
					When @SortOrder = 2 Then  ModelName
				End
			End DESC,
			Case @SortDir When 'DESC' Then
				Case 	When @SortOrder = 3 Then UnitCost End
			End DESC,
			Case @SortDir When 'DESC' Then
				Case 	When @SortOrder = 4 Then CreatedDate End
			End DESC
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Store_Products_UpdateProduct]') and OBJECTPROPERTY(object_id, N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_UpdateProduct]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Store_Products_UpdateProduct]
		@ProductID int,
		@CategoryID int,
		@Manufacturer nvarchar(50),
		@ModelNumber nvarchar(50),
		@ModelName nvarchar(50),
		@SEOName nvarchar(50),
		@ProductImage nvarchar(500),
		@RegularPrice money,
		@UnitCost money,
		@Keywords nvarchar(1000),
		@Summary nvarchar(1000),
		@Description ntext,
		@Featured bit,
		@Archived bit,	
		@Weight decimal(10,2),
		@Height decimal(10,2),
		@Length decimal(10,2),
		@Width decimal(10,2),
		@SaleStartDate datetime = null,
		@SaleEndDate datetime = null,
		@SalePrice money = null,
		@StockQuantity int,
		@LowThreshold int,
		@HighThreshold int,
		@DeliveryTime int,
		@PurchasePrice money,
		@RoleID int,
		@Virtual bit,
		@VirtualFileID int,
		@AllowedDownloads int

	AS
	SET NOCOUNT ON

	UPDATE {databaseOwner}{objectQualifier}Store_Products SET 
		CategoryID	= @CategoryID,
		Manufacturer	= @Manufacturer,
		ModelNumber	= @ModelNumber,
		ModelName	= @ModelName,
		SEOName	= @SEOName,
		ProductImage	= @ProductImage,
		RegularPrice	= @RegularPrice,
		UnitCost	= @UnitCost,
		Keywords	= @Keywords,
		Summary	= @Summary,
		[Description]	= @Description,
		Featured	= @Featured,
		Archived	= @Archived,
		ProductWeight	= @Weight,
		ProductHeight	= @Height,
		ProductLength	= @Length,
		ProductWidth	= @Width,
		SaleStartDate	= @SaleStartDate,
		SaleEndDate	= @SaleEndDate,
		SalePrice	= @SalePrice,
		StockQuantity	= @StockQuantity,
		LowThreshold	= @LowThreshold,
		HighThreshold	= @HighThreshold,
		DeliveryTime	= @DeliveryTime,
		PurchasePrice	= @PurchasePrice,
		RoleID		= @RoleID,
		Virtual		= @Virtual,
		VirtualFileID	= @VirtualFileID,
		AllowedDownloads = @AllowedDownloads
	WHERE
		ProductID = @ProductID
GO
