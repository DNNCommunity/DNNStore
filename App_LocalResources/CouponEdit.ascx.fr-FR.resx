<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplyToCategory.Text" xml:space="preserve">
    <value>Tous les produits de la catégorie</value>
  </data>
  <data name="ApplyToOrder.Text" xml:space="preserve">
    <value>Toute la commande</value>
  </data>
  <data name="ApplyToProduct.Text" xml:space="preserve">
    <value>Un produit spécifique</value>
  </data>
  <data name="btnChangeItem.Text" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="btnValidateCategory.Text" xml:space="preserve">
    <value>Valider</value>
  </data>
  <data name="DiscountFixedAmount.Text" xml:space="preserve">
    <value>Montant fixe</value>
  </data>
  <data name="DiscountFreeShipping.Text" xml:space="preserve">
    <value>Livraison gratuite</value>
  </data>
  <data name="DiscountPercentage.Text" xml:space="preserve">
    <value>Pourcentage</value>
  </data>
  <data name="EmptyComboValue.Text" xml:space="preserve">
    <value>--- Sélectionner ---</value>
  </data>
  <data name="ErrorDelete.Text" xml:space="preserve">
    <value>Une erreur est survenue lors de la suppression de ce coupon !</value>
  </data>
  <data name="lblApplyTo.Help" xml:space="preserve">
    <value>Sélectionner l'élément sur lequel appliquer la réduction.</value>
  </data>
  <data name="lblApplyTo.Text" xml:space="preserve">
    <value>Appliquer à :</value>
  </data>
  <data name="lblCategory.Help" xml:space="preserve">
    <value>Sélectionner la catégorie à controler.</value>
  </data>
  <data name="lblCategory.Text" xml:space="preserve">
    <value>Catégorie :</value>
  </data>
  <data name="lblCode.Help" xml:space="preserve">
    <value>Code du coupon de réduction.</value>
  </data>
  <data name="lblCode.Text" xml:space="preserve">
    <value>Code :</value>
  </data>
  <data name="lblDescription.Help" xml:space="preserve">
    <value>Description du coupon. Elle sera affiché pour l'utilisateur !</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Description :</value>
  </data>
  <data name="lblDiscountAmount.Help" xml:space="preserve">
    <value>Saisir le montant de réduction à appliquer.</value>
  </data>
  <data name="lblDiscountAmount.Text" xml:space="preserve">
    <value>Réduction :</value>
  </data>
  <data name="lblDiscountPercentage.Help" xml:space="preserve">
    <value>Saisir le pourcentage de réduction à appliquer.</value>
  </data>
  <data name="lblDiscountPercentage.Text" xml:space="preserve">
    <value>Pourcentage :</value>
  </data>
  <data name="lblDiscountType.Help" xml:space="preserve">
    <value>Sélectionner le type de promotion à appliquer.</value>
  </data>
  <data name="lblDiscountType.Text" xml:space="preserve">
    <value>Type de promotion :</value>
  </data>
  <data name="lblRuleAmount.Help" xml:space="preserve">
    <value>Saisir le montant minimum pour valider cette règle de coupon.</value>
  </data>
  <data name="lblRuleAmount.Text" xml:space="preserve">
    <value>Montant minimum :</value>
  </data>
  <data name="lblRuleType.Help" xml:space="preserve">
    <value>Sélectionner un type de règle. Par 'Dépensé au moins' on entend le total du panier courant; tandis que par 'Total commandé au moins' on entend la somme de toutes les commandes du client.</value>
  </data>
  <data name="lblRuleType.Text" xml:space="preserve">
    <value>Type de règle :</value>
  </data>
  <data name="lblSelectedItem.Help" xml:space="preserve">
    <value>Nom de l'élément sélectionné.</value>
  </data>
  <data name="lblSelectedItem.Text" xml:space="preserve">
    <value>Elément sélectionné :</value>
  </data>
  <data name="RuleOrderAnything.Text" xml:space="preserve">
    <value>Toutes commandes</value>
  </data>
  <data name="RuleOrdersAtLeast.Text" xml:space="preserve">
    <value>Total commandé au moins</value>
  </data>
  <data name="RuleSpendsAtLeast.Text" xml:space="preserve">
    <value>Dépensé au moins</value>
  </data>
  <data name="valReqCategory.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Une catégorie est requise !</value>
  </data>
  <data name="valReqCode.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Le code coupon est requis.</value>
  </data>
  <data name="valReqDescription.Text" xml:space="preserve">
    <value>&lt;br /&gt;* La description est requise.</value>
  </data>
  <data name="valReqDiscountAmount.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Le montant est requis.</value>
  </data>
  <data name="valReqDiscountPercentage.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Le pourcentage est requis..</value>
  </data>
  <data name="valReqRuleAmount.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Le montant minimum est requis.</value>
  </data>
  <data name="lblEndDate.Help" xml:space="preserve">
    <value>Saisir ou sélectionner la date de fin.</value>
  </data>
  <data name="lblEndDate.Text" xml:space="preserve">
    <value>Date de fin :</value>
  </data>
  <data name="lblStartDate.Help" xml:space="preserve">
    <value>Saisir ou sélectionner la date de début.</value>
  </data>
  <data name="lblStartDate.Text" xml:space="preserve">
    <value>Date de début :</value>
  </data>
  <data name="lblValidity.Help" xml:space="preserve">
    <value>Défini comment le coupon expire.</value>
  </data>
  <data name="lblValidity.Text" xml:space="preserve">
    <value>Validité :</value>
  </data>
  <data name="valCompEndDate.Text" xml:space="preserve">
    <value>&lt;br /&gt;Erreur ! Veuillez saisir une date correcte.</value>
  </data>
  <data name="valCompStartDate.Text" xml:space="preserve">
    <value>&lt;br /&gt;Erreur ! Veuillez saisir une date correcte.</value>
  </data>
  <data name="ValidityPermanent.Text" xml:space="preserve">
    <value>Permanente</value>
  </data>
  <data name="ValiditySingleUse.Text" xml:space="preserve">
    <value>Usage unique</value>
  </data>
  <data name="ValidityUntil.Text" xml:space="preserve">
    <value>Jusqu'au</value>
  </data>
  <data name="valReqEndDate.Text" xml:space="preserve">
    <value>&lt;br /&gt;* La date de fin est requise.</value>
  </data>
  <data name="valReqStartDate.Text" xml:space="preserve">
    <value>&lt;br /&gt;* La date de début est requise.</value>
  </data>
  <data name="valCompDiscountAmount.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Le montant doit être supérieur à zéro !</value>
  </data>
  <data name="valCompDiscountPercentage.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Le pourcentage doit être supérieur à zéro !</value>
  </data>
  <data name="valCompRuleAmount.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Le montant doit être supérieur à zéro !</value>
  </data>
  <data name="lblIncludeSubCategories.Help" xml:space="preserve">
    <value>Cocher pour inclure les sous-catégories.</value>
  </data>
  <data name="lblIncludeSubCategories.Text" xml:space="preserve">
    <value>Inclure sous-catégories :</value>
  </data>
  <data name="btnValidateProduct.Text" xml:space="preserve">
    <value>Valider</value>
  </data>
  <data name="lblProduct.Help" xml:space="preserve">
    <value>Sélectionner le produit à controler.</value>
  </data>
  <data name="lblProduct.Text" xml:space="preserve">
    <value>Produit :</value>
  </data>
  <data name="valCustValidateItem.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Veuillez valider votre sélection !</value>
  </data>
  <data name="valReqProduct.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Un produit est requis !</value>
  </data>
</root>