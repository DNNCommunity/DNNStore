<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblCode.Text" xml:space="preserve">
    <value>Code:</value>
  </data>
  <data name="lblCode.Help" xml:space="preserve">
    <value>Coupon code.</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="lblDescription.Help" xml:space="preserve">
    <value>Description of the coupon. It will be displayed for the user!</value>
  </data>
  <data name="ErrorDelete.Text" xml:space="preserve">
    <value>An error occurred while deleting this coupon!</value>
  </data>
  <data name="valReqDescription.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Description is required.</value>
  </data>
  <data name="valReqCode.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Coupon code is required.</value>
  </data>
  <data name="ApplyToCategory.Text" xml:space="preserve">
    <value>All items in category</value>
  </data>
  <data name="ApplyToOrder.Text" xml:space="preserve">
    <value>Entire order</value>
  </data>
  <data name="ApplyToProduct.Text" xml:space="preserve">
    <value>Specific product</value>
  </data>
  <data name="btnChangeItem.Text" xml:space="preserve">
    <value>Change Item</value>
  </data>
  <data name="btnValidateCategory.Text" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="DiscountFixedAmount.Text" xml:space="preserve">
    <value>Fixed amount</value>
  </data>
  <data name="DiscountFreeShipping.Text" xml:space="preserve">
    <value>Free shipping</value>
  </data>
  <data name="DiscountPercentage.Text" xml:space="preserve">
    <value>Percentage</value>
  </data>
  <data name="EmptyComboValue.Text" xml:space="preserve">
    <value>--- Select ---</value>
  </data>
  <data name="lblApplyTo.Help" xml:space="preserve">
    <value>Select the item on which to apply the discount.</value>
  </data>
  <data name="lblApplyTo.Text" xml:space="preserve">
    <value>Apply To:</value>
  </data>
  <data name="lblCategory.Help" xml:space="preserve">
    <value>Select the category to control.</value>
  </data>
  <data name="lblCategory.Text" xml:space="preserve">
    <value>Category:</value>
  </data>
  <data name="lblDiscountAmount.Help" xml:space="preserve">
    <value>Enter the discount amount to apply.</value>
  </data>
  <data name="lblDiscountAmount.Text" xml:space="preserve">
    <value>Amount:</value>
  </data>
  <data name="lblDiscountPercentage.Help" xml:space="preserve">
    <value>Enter the discount percentage to apply.</value>
  </data>
  <data name="lblDiscountPercentage.Text" xml:space="preserve">
    <value>Percentage:</value>
  </data>
  <data name="lblDiscountType.Help" xml:space="preserve">
    <value>Select the discount type to apply.</value>
  </data>
  <data name="lblDiscountType.Text" xml:space="preserve">
    <value>Discount Type:</value>
  </data>
  <data name="lblRuleAmount.Help" xml:space="preserve">
    <value>Enter the minimum amount to validate this coupon rule.</value>
  </data>
  <data name="lblRuleAmount.Text" xml:space="preserve">
    <value>Minimum Amount:</value>
  </data>
  <data name="lblRuleType.Help" xml:space="preserve">
    <value>Select a rule type. 'Spends at least' means the total of the current cart; while 'Orders at least' means the sum of all orders for the current customer.</value>
  </data>
  <data name="lblRuleType.Text" xml:space="preserve">
    <value>Rule Type:</value>
  </data>
  <data name="lblSelectedItem.Help" xml:space="preserve">
    <value>Name of the selected item.</value>
  </data>
  <data name="lblSelectedItem.Text" xml:space="preserve">
    <value>Selected Item:</value>
  </data>
  <data name="RuleOrderAnything.Text" xml:space="preserve">
    <value>Order anything</value>
  </data>
  <data name="RuleOrdersAtLeast.Text" xml:space="preserve">
    <value>Orders at least</value>
  </data>
  <data name="RuleSpendsAtLeast.Text" xml:space="preserve">
    <value>Spends at least</value>
  </data>
  <data name="valReqCategory.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Select a category!</value>
  </data>
  <data name="valReqDiscountAmount.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Discount amount is required.</value>
  </data>
  <data name="valReqDiscountPercentage.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Discount percentage is required.</value>
  </data>
  <data name="valReqRuleAmount.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Minimum amount is required.</value>
  </data>
  <data name="lblEndDate.Help" xml:space="preserve">
    <value>Enter or select end date.</value>
  </data>
  <data name="lblEndDate.Text" xml:space="preserve">
    <value>End Date:</value>
  </data>
  <data name="lblStartDate.Help" xml:space="preserve">
    <value>Enter or select start date.</value>
  </data>
  <data name="lblStartDate.Text" xml:space="preserve">
    <value>Start Date:</value>
  </data>
  <data name="lblValidity.Help" xml:space="preserve">
    <value>Defines how the coupon expire.</value>
  </data>
  <data name="lblValidity.Text" xml:space="preserve">
    <value>Validity:</value>
  </data>
  <data name="valCompEndDate.Text" xml:space="preserve">
    <value>&lt;br /&gt;Error! Please enter a valid date.</value>
  </data>
  <data name="valCompStartDate.Text" xml:space="preserve">
    <value>&lt;br /&gt;Error! Please enter a valid date.</value>
  </data>
  <data name="ValidityPermanent.Text" xml:space="preserve">
    <value>Permanent</value>
  </data>
  <data name="ValiditySingleUse.Text" xml:space="preserve">
    <value>Single use</value>
  </data>
  <data name="ValidityUntil.Text" xml:space="preserve">
    <value>Until</value>
  </data>
  <data name="valReqEndDate.Text" xml:space="preserve">
    <value>&lt;br /&gt;* End date is required.</value>
  </data>
  <data name="valReqStartDate.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Start date is required.</value>
  </data>
  <data name="btnValidateProduct.Text" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="lblProduct.Help" xml:space="preserve">
    <value>Select the product to control.</value>
  </data>
  <data name="lblProduct.Text" xml:space="preserve">
    <value>Product:</value>
  </data>
  <data name="valReqProduct.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Select a product!</value>
  </data>
  <data name="valCompDiscountAmount.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Amount must be greater than 0!</value>
  </data>
  <data name="valCompDiscountPercentage.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Percentage must be greater than 0!</value>
  </data>
  <data name="valCompRuleAmount.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Amount must be greater than 0!</value>
  </data>
  <data name="valCustValidateItem.Text" xml:space="preserve">
    <value>&lt;br /&gt;* Please validate your choice!</value>
  </data>
  <data name="lblIncludeSubCategories.Help" xml:space="preserve">
    <value>Check to include subcategories.</value>
  </data>
  <data name="lblIncludeSubCategories.Text" xml:space="preserve">
    <value>Include SubCategories:</value>
  </data>
</root>